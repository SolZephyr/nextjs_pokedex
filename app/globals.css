@import "tailwindcss";

:root {
  --background: #ffffff;
  --foreground: #030303;

  --type-normal: #a1a1a1;
  --type-grass: #5d9d3c;
  --type-fire: #d43a30;
  --type-water: #4c79bc;
  --type-fighting: #f08833;
  --type-flying: #8fb8e4;
  --type-poison: #6d4b97;
  --type-electric: #f2c341;
  --type-ground: #895229;
  --type-psychic: #dc4d79;
  --type-rock: #ada984;
  --type-ice: #78ccf0;
  --type-bug: #95a135;
  --type-dragon: #4c60a9;
  --type-ghost: #6b426e;
  --type-dark: #4e403f;
  --type-steel: #74a2b9;
  --type-fairy: #ba7fb5;
  --type-none: #76a696;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-jaldi: var(--font-jaldi);
  --font-jersey: var(--font-jersey);

  --color-type-normal: var(--type-normal);
  --color-type-grass: var(--type-grass);
  --color-type-fire: var(--type-fire);
  --color-type-water: var(--type-water);
  --color-type-fighting: var(--type-fighting);
  --color-type-flying: var(--type-flying);
  --color-type-poison: var(--type-poison);
  --color-type-electric: var(--type-electric);
  --color-type-ground: var(--type-ground);
  --color-type-psychic: var(--type-psychic);
  --color-type-rock: var(--type-rock);
  --color-type-ice: var(--type-ice);
  --color-type-bug: var(--type-bug);
  --color-type-dragon: var(--type-dragon);
  --color-type-ghost: var(--type-ghost);
  --color-type-dark: var(--type-dark);
  --color-type-steel: var(--type-steel);
  --color-type-fairy: var(--type-fairy);
  --color-type-none: var(--type-none);
}

/* 
@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
} */

body {
  background: var(--background);
  color: var(--foreground);
  font-family: var(--font-jaldi), Arial, Helvetica, sans-serif;
}

h1, h2, h3 {
  font-family: var(--font-jersey), Arial, Helvetica, sans-serif;
}

@utility bg-pattern {
  /* https://css-pattern.com/cubes-illusion/ */

  --s: 200px;
  /* control the size*/

  --c1: var(--color-neutral-900);
  --c2: var(--color-neutral-500);
  --c3: var(--color-neutral-700);

  background: repeating-conic-gradient(from 30deg, #0000 0 120deg, var(--c3) 0 50%) calc(var(--s)/2) calc(var(--s)*tan(30deg)/2),
    repeating-conic-gradient(from 30deg, var(--c1) 0 60deg, var(--c2) 0 120deg, var(--c3) 0 50%);
  background-size: var(--s) calc(var(--s)*tan(30deg));
}

.btn-primary {
  @apply p-2 pl-6 pr-6 mt-4 mb-14 cursor-pointer text-xl text-white bg-gradient-to-r from-orange-400 to-red-400 rounded-full font-bold flex items-center justify-center gap-1;
}

.btn-search {
  @apply p-2 cursor-pointer text-xl text-white bg-blue-500 border-3 border-transparent rounded-xl font-bold flex items-center justify-center hover:bg-blue-100 hover:text-blue-500 hover:border-blue-500;
}

.drop-down {
  @apply p-2 cursor-pointer text-xl text-white border-blue-500 rounded-xl font-bold flex items-center justify-center;
}

.text-gradient {
  @apply text-transparent bg-clip-text bg-gradient-to-r from-purple-800 to-blue-800;
}

/* breakout */
/* see https://www.youtube.com/watch?v=c13gpBrnGEw */
/* TODO: make tailwind utility */
.content-grid {
  --spacing-xl: 4rem;
  --spacing-lg: 2rem;
  --spacing-md: 1rem;
  --spacing-sm: .5rem;
  --spacing-xs: .25rem;

  --content-max-width: 56.25rem;
  --breakout-max-width: 75rem;
  --padding-inline: var(--spacing-md);
  --breakout-size: calc((var(--breakout-max-width) - var(--content-max-width)) / 2);

  display: grid;
  grid-template-columns:
    [full-width-start] minmax(var(--padding-inline), 1fr) [breakout-start] minmax(0, var(--breakout-size)) [content-start] min(100% - (var(--padding-inline) * 2),
      var(--content-max-width)) [content-end] minmax(0, var(--breakout-size)) [breakout-end] minmax(var(--padding-inline), 1fr) [full-width-end];
}

.content-grid> :not(.breakout, .full-width),
.full-width> :not(.breakout, .full-width) {
  grid-column: content;
}

.content-grid>.breakout {
  grid-column: breakout;
}

.content-grid>.full-width {
  grid-column: full-width;

  display: grid;
  grid-template-columns: inherit;
}


.type-normal {
  --color-tmp: var(--type-normal);

  &.type-bg, .type-bg {
    background: var(--color-tmp);
  }
  &.type-bdr, .type-bdr {
    border-color: var(--color-tmp);
  }
  .field-id {
    background: rgb(from var(--color-tmp) r g b / .3);
  }
}

.type-grass {
  --color-tmp: var(--type-grass);

  &.type-bg, .type-bg {
    background: var(--color-tmp);
  }
  &.type-bdr, .type-bdr {
    border-color: var(--color-tmp);
  }
  .field-id {
    background: rgb(from var(--color-tmp) r g b / .3);
  }
}

.type-fire {
  --color-tmp: var(--type-fire);

  &.type-bg, .type-bg {
    background: var(--color-tmp);
  }
  &.type-bdr, .type-bdr {
    border-color: var(--color-tmp);
  }
  .field-id {
    background: rgb(from var(--color-tmp) r g b / .3);
  }
}

.type-water {
  --color-tmp: var(--type-water);

  &.type-bg, .type-bg {
    background: var(--color-tmp);
  }
  &.type-bdr, .type-bdr {
    border-color: var(--color-tmp);
  }
  .field-id {
    background: rgb(from var(--color-tmp) r g b / .3);
  }
}

.type-fighting {
  --color-tmp: var(--type-fighting);

  &.type-bg, .type-bg {
    background: var(--color-tmp);
  }
  &.type-bdr, .type-bdr {
    border-color: var(--color-tmp);
  }
  .field-id {
    background: rgb(from var(--color-tmp) r g b / .3);
  }
}

.type-flying {
  --color-tmp: var(--type-flying);

  &.type-bg, .type-bg {
    background: var(--color-tmp);
  }
  &.type-bdr, .type-bdr {
    border-color: var(--color-tmp);
  }
  .field-id {
    background: rgb(from var(--color-tmp) r g b / .3);
  }
}

.type-poison {
  --color-tmp: var(--type-poison);

  &.type-bg, .type-bg {
    background: var(--color-tmp);
  }
  &.type-bdr, .type-bdr {
    border-color: var(--color-tmp);
  }
  .field-id {
    background: rgb(from var(--color-tmp) r g b / .3);
  }
}

.type-electric {
  --color-tmp: var(--type-electric);

  &.type-bg, .type-bg {
    background: var(--color-tmp);
  }
  &.type-bdr, .type-bdr {
    border-color: var(--color-tmp);
  }
  .field-id {
    background: rgb(from var(--color-tmp) r g b / .3);
  }
}

.type-ground {
  --color-tmp: var(--type-ground);

  &.type-bg, .type-bg {
    background: var(--color-tmp);
  }
  &.type-bdr, .type-bdr {
    border-color: var(--color-tmp);
  }
  .field-id {
    background: rgb(from var(--color-tmp) r g b / .3);
  }
}

.type-psychic {
  --color-tmp: var(--type-psychic);

  &.type-bg, .type-bg {
    background: var(--color-tmp);
  }
  &.type-bdr, .type-bdr {
    border-color: var(--color-tmp);
  }
  .field-id {
    background: rgb(from var(--color-tmp) r g b / .3);
  }
}

.type-rock {
  --color-tmp: var(--type-rock);

  &.type-bg, .type-bg {
    background: var(--color-tmp);
  }
  &.type-bdr, .type-bdr {
    border-color: var(--color-tmp);
  }
  .field-id {
    background: rgb(from var(--color-tmp) r g b / .3);
  }
}

.type-ice {
  --color-tmp: var(--type-ice);

  &.type-bg, .type-bg {
    background: var(--color-tmp);
  }
  &.type-bdr, .type-bdr {
    border-color: var(--color-tmp);
  }
  .field-id {
    background: rgb(from var(--color-tmp) r g b / .3);
  }
}

.type-bug {
  --color-tmp: var(--type-bug);

  &.type-bg, .type-bg {
    background: var(--color-tmp);
  }
  &.type-bdr, .type-bdr {
    border-color: var(--color-tmp);
  }
  .field-id {
    background: rgb(from var(--color-tmp) r g b / .3);
  }
}

.type-dragon {
  --color-tmp: var(--type-dragon);

  &.type-bg, .type-bg {
    background: var(--color-tmp);
  }
  &.type-bdr, .type-bdr {
    border-color: var(--color-tmp);
  }
  .field-id {
    background: rgb(from var(--color-tmp) r g b / .3);
  }
}

.type-ghost {
  --color-tmp: var(--type-ghost);

  &.type-bg, .type-bg {
    background: var(--color-tmp);
  }
  &.type-bdr, .type-bdr {
    border-color: var(--color-tmp);
  }
  .field-id {
    background: rgb(from var(--color-tmp) r g b / .3);
  }
}

.type-dark {
  --color-tmp: var(--type-dark);

  &.type-bg, .type-bg {
    background: var(--color-tmp);
  }
  &.type-bdr, .type-bdr {
    border-color: var(--color-tmp);
  }
  .field-id {
    background: rgb(from var(--color-tmp) r g b / .3);
  }
}

.type-steel {
  --color-tmp: var(--type-steel);

  &.type-bg, .type-bg {
    background: var(--color-tmp);
  }
  &.type-bdr, .type-bdr {
    border-color: var(--color-tmp);
  }
  .field-id {
    background: rgb(from var(--color-tmp) r g b / .3);
  }
}

.type-fairy {
  --color-tmp: var(--type-fairy);

  &.type-bg, .type-bg {
    background: var(--color-tmp);
  }
  &.type-bdr, .type-bdr {
    border-color: var(--color-tmp);
  }
  .field-id {
    background: rgb(from var(--color-tmp) r g b / .3);
  }
}

.type-none {
  --color-tmp: var(--type-none);

  &.type-bg, .type-bg {
    background: var(--color-tmp);
  }
  &.type-bdr, .type-bdr {
    border-color: var(--color-tmp);
  }
  .field-id {
    background: rgb(from var(--color-tmp) r g b / .3);
  }
}